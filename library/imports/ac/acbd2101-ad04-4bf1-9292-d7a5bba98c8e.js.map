{"version":3,"sources":["assets/script/pokerUI.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;;;;;;;;;;;;;AAE5E,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAC1C,wCAAiD;AAGjD;IAAqC,2BAAY;IAAjD;QAAA,qEAyBC;QAvBuB,WAAK,GAAa,IAAI,CAAC;QACtB,UAAI,GAAc,IAAI,CAAC;QAElB,cAAQ,GAAmB,IAAI,CAAC;QAChC,eAAS,GAAmB,IAAI,CAAC;;IAmB/D,CAAC;IAjBG,uBAAK,GAAL;IACA,CAAC;IAEM,sBAAI,GAAX,UAAY,KAAY;QACpB,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,KAAG,KAAK,CAAC,KAAO,CAAC;QACrC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;IAChC,CAAC;IAEM,2BAAS,GAAhB,UAAiB,MAAmB;QAChC,IAAI,MAAM,IAAI,mBAAW,CAAC,KAAK,EAAE;YAC7B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC;SACzC;aAAM;YACH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YAC9B,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC;SAC1C;IACL,CAAC;IAtBmB;QAAnB,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;0CAAwB;IACtB;QAApB,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;yCAAwB;IAElB;QAAzB,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC;6CAAiC;IAChC;QAAzB,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC;8CAAkC;IAN1C,OAAO;QAD3B,OAAO;OACa,OAAO,CAyB3B;IAAD,cAAC;CAzBD,AAyBC,CAzBoC,EAAE,CAAC,SAAS,GAyBhD;kBAzBoB,OAAO","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst {ccclass, property} = cc._decorator;\nimport {Poker, PokerStatus} from \"./entity/poker\"\n\n@ccclass\nexport default class PokerUI extends cc.Component {\n\n    @property(cc.Label) point: cc.Label = null;\n    @property(cc.Sprite) card: cc.Sprite = null;\n\n    @property(cc.SpriteFrame) cardBack: cc.SpriteFrame = null;\n    @property(cc.SpriteFrame) cardFront: cc.SpriteFrame = null;\n\n    start () {\n    }\n\n    public init(poker: Poker) {\n        this.point.string = `${poker.point}`;\n        this.setStatus(poker.status)\n    }\n\n    public setStatus(status: PokerStatus) {\n        if (status == PokerStatus.CLOSE) {\n            this.point.node.active = false;\n            this.card.spriteFrame = this.cardBack;\n        } else {\n            this.point.node.active = true;\n            this.card.spriteFrame = this.cardFront;\n        }\n    }\n}\n"]}