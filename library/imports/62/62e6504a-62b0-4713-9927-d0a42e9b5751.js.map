{"version":3,"sources":["assets/script/achievement.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst {ccclass, property} = cc._decorator;\nimport AchievementItemUI from './achievementItemUI';\nimport Client from './client'\nimport { AchievementItem } from './entity/achievementItem';\n\n@ccclass\nexport default class NewClass extends cc.Component {\n\n    @property(cc.Node) closeBtn: cc.Node = null;\n    @property(cc.AudioClip) clickMusic: cc.AudioClip = null;\n\n    @property(cc.Label) progressLabel: cc.Label = null;\n    @property(cc.Label) countLabel: cc.Label = null;\n    @property(cc.Sprite) progressSprite: cc.Sprite = null;\n\n    @property(cc.Prefab) achievementItem: cc.Prefab = null;\n\n    private client: Client = null;\n\n    start () {\n        this.closeBtn.on(cc.Node.EventType.TOUCH_START, this.onCloseBtnClick, this);\n        // const client = new Client();\n        // const scoreRes = await client.getScore('user');\n        // this.init(scoreRes.success, scoreRes.total);\n        this.initScore(10, 30);\n\n        let total = 20;\n        var y = -10;\n        for (var i = 0; i < total / 7; ++i) {\n            var x = -240;\n            for (var j = 0; j < 7; j++) {\n                let itemUI = this.createItemUI(new AchievementItem(i * 7 + j));\n                itemUI.node.x = x;\n                itemUI.node.y = y;\n                this.node.addChild(itemUI.node);\n                x += 80;\n            }\n            y -= 85;\n        }\n    }\nx\n    private createItemUI(item: AchievementItem): AchievementItemUI {\n        let itemUiNode = cc.instantiate(this.achievementItem);\n        let itemUI: AchievementItemUI = itemUiNode.getComponent(AchievementItemUI);\n        itemUI.init(item);\n        return itemUI;\n    }\n\n    private onCloseBtnClick() {\n        cc.audioEngine.playEffect(this.clickMusic, false);\n        cc.director.loadScene('menu');\n    }\n\n    private initScore(count: number, total: number) {\n        let percent = total == 0 ? 0 : Math.floor(count * 100 / total)\n\n        this.progressLabel.string = `${percent}%`\n        this.countLabel.string = `${count}`\n        this.progressSprite.fillRange = percent / 100.0\n    }\n}\n"]}