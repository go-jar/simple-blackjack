{"version":3,"sources":["assets/script/achievement.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE5E,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAI1C;IAAsC,4BAAY;IAAlD;QAAA,qEA4BC;QA1BsB,cAAQ,GAAY,IAAI,CAAC;QAExB,mBAAa,GAAa,IAAI,CAAA;QAC9B,gBAAU,GAAa,IAAI,CAAA;QAC1B,oBAAc,GAAc,IAAI,CAAA;;IAsBzD,CAAC;IApBS,wBAAK,GAAX;;;gBACI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;gBAE5E,+BAA+B;gBAC/B,kDAAkD;gBAClD,+CAA+C;gBAC/C,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;;;;KACrB;IAEO,kCAAe,GAAvB;QACI,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IAEO,uBAAI,GAAZ,UAAa,KAAa,EAAE,KAAa;QACrC,IAAI,OAAO,GAAG,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC,CAAA;QAE9D,IAAI,CAAC,aAAa,CAAC,MAAM,GAAM,OAAO,MAAG,CAAA;QACzC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,KAAG,KAAO,CAAA;QACnC,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,OAAO,GAAG,KAAK,CAAA;IACnD,CAAC;IAzBkB;QAAlB,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;8CAA0B;IAExB;QAAnB,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;mDAA+B;IAC9B;QAAnB,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;gDAA4B;IAC1B;QAApB,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;oDAAiC;IANpC,QAAQ;QAD5B,OAAO;OACa,QAAQ,CA4B5B;IAAD,eAAC;CA5BD,AA4BC,CA5BqC,EAAE,CAAC,SAAS,GA4BjD;kBA5BoB,QAAQ","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst {ccclass, property} = cc._decorator;\nimport Client from './client'\n\n@ccclass\nexport default class NewClass extends cc.Component {\n\n    @property(cc.Node) closeBtn: cc.Node = null;\n\n    @property(cc.Label) progressLabel: cc.Label = null \n    @property(cc.Label) countLabel: cc.Label = null \n    @property(cc.Sprite) progressSprite: cc.Sprite = null\n\n    async start () {\n        this.closeBtn.on(cc.Node.EventType.TOUCH_START, this.onCloseBtnClick, this);\n\n        // const client = new Client();\n        // const scoreRes = await client.getScore('user');\n        // this.init(scoreRes.success, scoreRes.total);\n        this.init(10, 30);\n    }\n\n    private onCloseBtnClick() {\n        cc.director.loadScene('menu');\n    }\n\n    private init(count: number, total: number) {\n        let percent = total == 0 ? 0 : Math.floor(count * 100 / total)\n\n        this.progressLabel.string = `${percent}%`\n        this.countLabel.string = `${count}`\n        this.progressSprite.fillRange = percent / 100.0\n    }\n}\n"]}