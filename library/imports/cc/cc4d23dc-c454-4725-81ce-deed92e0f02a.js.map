{"version":3,"sources":["assets/script/client.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6CAA6D;AAC7D,IAAM,GAAG,GAAG,YAAY,CAAC;AAEzB;IAGI;QAAA,iBAmBC;QAlBG,IAAI,CAAC,MAAM,GAAG,IAAI,4BAAa,CAAC,UAAC,cAA8B;YAC3D,OAAA,KAAK,CAAC,GAAG,EAAE;gBACP,MAAM,EAAE,MAAM;gBACd,OAAO,EAAE;oBACL,cAAc,EAAE,kBAAkB;iBACrC;gBACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC;aACvC,CAAC,CAAC,IAAI,CAAC,UAAC,QAAQ;gBACb,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;oBACzB,4DAA4D;oBAC5D,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAC,eAAe,IAAK,OAAA,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,EAApC,CAAoC,CAAC,CAAC;iBAC1F;qBAAM,IAAI,cAAc,CAAC,EAAE,KAAK,SAAS,EAAE;oBACxC,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;iBACzD;qBAAM;oBACH,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC,CAAC;iBAC5D;YACL,CAAC,CAAC;QAfF,CAeE,CACL,CAAC;IACN,CAAC;IAEY,yBAAQ,GAArB,UAAsB,MAAc;;;;gBAC5B,KAAK,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC;gBAC/B,sBAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,EAAC;;;KACjD;IACL,aAAC;AAAD,CA5BA,AA4BC,IAAA","file":"","sourceRoot":"/","sourcesContent":["import { JSONRPCClient, JSONRPCRequest } from \"json-rpc-2.0\";\nconst URL = 'http://aaa';\n\nexport default class Client {\n    client: JSONRPCClient;\n\n    constructor() {\n        this.client = new JSONRPCClient((jsonRPCRequest: JSONRPCRequest) =>\n            fetch(URL, {\n                method: 'POST',\n                headers: {\n                    'content-type': 'application/json',\n                },\n                body: JSON.stringify(jsonRPCRequest),\n            }).then((response) => {\n                if (response.status === 200) {\n                    // Use client.receive when you received a JSON-RPC response.\n                    return response.json().then((jsonRPCResponse) => this.client.receive(jsonRPCResponse));\n                } else if (jsonRPCRequest.id !== undefined) {\n                    return Promise.reject(new Error(response.statusText));\n                } else {\n                    return Promise.reject(new Error('request id undefined'));\n                }\n            }),\n        );\n    }\n\n    public async getScore(userId: string) {\n        let param = { userId: userId };\n        return this.client.request('getScore', param);\n    }\n}\n"]}